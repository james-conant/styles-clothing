{"version":3,"sources":["components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["FormInput","handleChange","label","otherProps","className","onChange","value","length","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setUserCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignin","signUpStart","username","confirmPassword","alert","SignInAndSignUp"],"mappings":"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","file":"static/js/7.4a613e98.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  <div className=\"group\">\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label `}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-buttom.component\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChange}\n          value={email}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\" value=\"Submit Form\">\n            Sign in\n          </CustomButton>\n          <CustomButton\n            onClick={googleSignInStart}\n            type=\"button\"\n            value=\"Submit Form\"\n            isGoogleSignin\n          >\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-buttom.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { username, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords dont match!\");\n    } else {\n      signUpStart({ username, email, password, confirmPassword });\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <div className=\"title\">\n        <span>Sign up with your email and passsword</span>\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            handleChange={handleChange}\n            label=\"Display Name\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            handleChange={handleChange}\n            label=\"Email\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={handleChange}\n            label=\"Password\"\n            required\n          ></FormInput>\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            handleChange={handleChange}\n            label=\"Confirm Password\"\n            required\n          ></FormInput>\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToprops = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToprops)(SignUp);\n","import React from \"react\";\n\nimport SignIn from \"../../components/sign-in/sign-in.component\";\nimport SignUp from \"../../components/sign-up/sign-up.component\";\n\nimport \"./sign-in-and-sign-up.styles.scss\";\n\nconst SignInAndSignUp = () => {\n  return (\n    <div className=\"sign-in-and-sign-up\">\n      <SignIn />\n      <SignUp />\n    </div>\n  );\n};\n\nexport default SignInAndSignUp;\n"],"sourceRoot":""}